{"ast":null,"code":"var _jsxFileName = \"/home/hellal/Documents/Work/Devis/src/Devis.js\";\n// ============================================================\n// Import packages\nimport React from 'react';\nimport { Header, Lot } from './scene';\nimport { urlDevis } from './utils/constants';\n\nclass Devis extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: true\n    };\n    this.updateDataToState = this.updateDataToState.bind(this);\n  } // async await pareil que fetch.then\n  // componentWillMount(){\n  //  fetch(\"https://api.travauxlib.com/api/devis-pro/JKusHl8Ba8MABIjdCtLZOe2lxxnUfX\")\n  // .then(response=>response.json())\n  // .then(data=>this.setState({\n  //     jsonDevis: data,\n  //     company: data.company,\n  //     title : data.title,\n  //     chantierAddress : data.deal.chantierAddress\n  // }\n  //     ));\n\n\n  updateDataToState(data) {\n    const {\n      customerName,\n      customerEmail\n    } = data.deal;\n    const customer = {\n      name: customerName,\n      email: customerEmail\n    };\n    let {\n      address,\n      postalCode,\n      city\n    } = data.deal.chantierAddress;\n    const chantier = {\n      address,\n      postalCode,\n      city\n    };\n    const company = {\n      address: data.company.address,\n      postalCode: data.company.postalCode,\n      city: data.company.city,\n      firstNameRepresentantLegal: data.company.firstNameRepresentantLegal,\n      lastNameRepresentantLegal: data.company.lastNameRepresentantLegal,\n      logoUrl: data.company.logoUrl\n    };\n    const billingAddress = {\n      address: data.deal.billingAddress.address,\n      postalCode: data.deal.billingAddress.postalCode,\n      city: data.deal.billingAddress.city\n    };\n    const lots = data.lots.map(({\n      label,\n      prixTotalTTC,\n      lignes\n    }) => ({\n      label,\n      prixTotalTTC,\n      lignes: getLignes(lignes)\n    }));\n    this.setState({\n      isLoading: false,\n      company: company,\n      billingAddress: billingAddress,\n      devisTitle: data.title,\n      chantier: chantier,\n      customer: customer,\n      date: data.date,\n      lots\n    });\n  }\n\n  async componentWillMount() {\n    this.setState({\n      isLoading: true\n    });\n    const reponse = await fetch(\"https://api.travauxlib.com/api/devis-pro/JKusHl8Ba8MABIjdCtLZOe2lxxnUfX\");\n    const data = await reponse.json();\n    this.updateDataToState(data);\n  }\n\n  render() {\n    if (this.state.isLoading) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"onLoading\");\n    }\n\n    const lots = this.state.lots.map(({\n      lignes,\n      label,\n      prixTotalTTC\n    }) => React.createElement(Lot, {\n      key: prixTotalTTC,\n      lignes: lignes,\n      label: label,\n      prixTotalTTC: prixTotalTTC,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }));\n    return React.createElement(React.Fragment, null, React.createElement(Header, {\n      company: this.state.company,\n      devisTitle: this.state.devisTitle,\n      chantier: this.state.chantier,\n      customer: this.state.customer,\n      date: this.state.date,\n      billingAddress: this.state.billingAddress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }), lots);\n  }\n\n}\n/**\n * Get all need informations \n * @param {Array} lots \n */\n\n\nfunction getLignes(lignes) {\n  return lignes.map(({\n    designation,\n    description,\n    prixUnitaireHT,\n    unite,\n    quantite,\n    prixHT,\n    tauxTVA,\n    montantTVA,\n    prixTTC\n  }) => ({\n    designation,\n    description,\n    unit_price: prixUnitaireHT,\n    quantite,\n    unite,\n    prixHT,\n    tauxTVA,\n    amountTVA: montantTVA,\n    priceTTC: prixTTC\n  }));\n}\n\nexport default Devis;","map":{"version":3,"sources":["/home/hellal/Documents/Work/Devis/src/Devis.js"],"names":["React","Header","Lot","urlDevis","Devis","Component","constructor","state","isLoading","updateDataToState","bind","data","customerName","customerEmail","deal","customer","name","email","address","postalCode","city","chantierAddress","chantier","company","firstNameRepresentantLegal","lastNameRepresentantLegal","logoUrl","billingAddress","lots","map","label","prixTotalTTC","lignes","getLignes","setState","devisTitle","title","date","componentWillMount","reponse","fetch","json","render","designation","description","prixUnitaireHT","unite","quantite","prixHT","tauxTVA","montantTVA","prixTTC","unit_price","amountTVA","priceTTC"],"mappings":"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","sourcesContent":["// ============================================================\n// Import packages\nimport React from 'react';\n\n\nimport {Header, Lot} from './scene';\nimport {urlDevis} from './utils/constants';\n\nclass Devis extends React.Component{\n    constructor(){\n        super();\n        this.state = {\n            isLoading:true,\n        }\n        this.updateDataToState = this.updateDataToState.bind(this);\n    }\n    // async await pareil que fetch.then\n    // componentWillMount(){\n    //  fetch(\"https://api.travauxlib.com/api/devis-pro/JKusHl8Ba8MABIjdCtLZOe2lxxnUfX\")\n    // .then(response=>response.json())\n    // .then(data=>this.setState({\n    //     jsonDevis: data,\n    //     company: data.company,\n    //     title : data.title,\n    //     chantierAddress : data.deal.chantierAddress\n    // }\n        \n    //     ));\n    updateDataToState(data){\n        const {customerName, customerEmail}= data.deal;\n        const customer = {\n            name:customerName,\n            email: customerEmail,\n        };\n        let {address, postalCode, city}= data.deal.chantierAddress;\n        const chantier={\n            address,\n            postalCode,\n            city\n        };\n        const company ={\n          address: data.company.address,\n          postalCode: data.company.postalCode,\n          city: data.company.city,\n          firstNameRepresentantLegal: data.company.firstNameRepresentantLegal,\n          lastNameRepresentantLegal: data.company.lastNameRepresentantLegal,\n          logoUrl : data.company.logoUrl,\n        };\n        const billingAddress={\n            address: data.deal.billingAddress.address,\n            postalCode: data.deal.billingAddress.postalCode,\n            city: data.deal.billingAddress.city\n        };\n        const lots = data.lots.map(({label, prixTotalTTC, lignes})=>({\n            label,\n            prixTotalTTC,\n            lignes: getLignes(lignes),\n            \n        }));\n        \n        this.setState({ \n            isLoading: false,\n            company: company,\n            billingAddress: billingAddress,\n            \n            devisTitle : data.title,\n            chantier : chantier,\n            customer: customer,\n            date: data.date,\n            lots,\n        })\n    \n    }\n    async componentWillMount(){\n        \n        this.setState({isLoading: true});\n        const reponse = await fetch(\"https://api.travauxlib.com/api/devis-pro/JKusHl8Ba8MABIjdCtLZOe2lxxnUfX\");\n        const data = await reponse.json();\n        this.updateDataToState(data);\n        \n    }\n    render(){\n        if( this.state.isLoading){\n            return <div>onLoading</div>\n        }\n        const lots = this.state.lots.map(({lignes,label,prixTotalTTC})=>(\n            <Lot key={prixTotalTTC} lignes={lignes} label={label} prixTotalTTC={prixTotalTTC}/>));\n        return (\n            <>\n            <Header \n                company={this.state.company}\n                devisTitle={this.state.devisTitle} \n                chantier={this.state.chantier}\n                customer={this.state.customer}\n                date={this.state.date}\n                billingAddress={this.state.billingAddress}/>\n               {lots}\n                </>\n                )\n        }\n}\n\n/**\n * Get all need informations \n * @param {Array} lots \n */\nfunction getLignes(lignes){\n    return lignes.map(({designation, description, prixUnitaireHT,unite, quantite,prixHT,tauxTVA,montantTVA,prixTTC})=>(\n       {\n        designation,\n        description,\n        unit_price:prixUnitaireHT,\n        quantite,\n        unite,\n        prixHT,\n        tauxTVA,\n        amountTVA:montantTVA,\n        priceTTC:prixTTC,\n    }));\n}\n\nexport default Devis;"]},"metadata":{},"sourceType":"module"}